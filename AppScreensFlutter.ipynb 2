{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "## Welcome screen ##"
      ],
      "metadata": {
        "id": "6N4ggasCezLN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class WelcomeScreen extends StatelessWidget {\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      backgroundColor: Color(0xFF031F4C), // Dark blue background color\n",
        "      body: Column(\n",
        "        mainAxisAlignment: MainAxisAlignment.center,\n",
        "        crossAxisAlignment: CrossAxisAlignment.center,\n",
        "        children: [\n",
        "          Image.asset('assets/logo.png', height: 150),  // App logo\n",
        "          SizedBox(height: 50),\n",
        "          ElevatedButton(\n",
        "            onPressed: () {},\n",
        "            child: Text(\"Log In\"),\n",
        "            style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),  // Orange color\n",
        "          ),\n",
        "          SizedBox(height: 20),\n",
        "          ElevatedButton(\n",
        "            onPressed: () {},\n",
        "            child: Text(\"Sign Up\"),\n",
        "            style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),  // Orange color\n",
        "          ),\n",
        "        ],\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "Vz4_ixPFfK72"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Sign In screen ##"
      ],
      "metadata": {
        "id": "SkqpCEPffDAz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class SignInScreen extends StatelessWidget {\n",
        "  final TextEditingController _usernameController = TextEditingController();\n",
        "  final TextEditingController _passwordController = TextEditingController();\n",
        "\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      backgroundColor: Colors.white,\n",
        "      body: Padding(\n",
        "        padding: const EdgeInsets.all(16.0),\n",
        "        child: Column(\n",
        "          crossAxisAlignment: CrossAxisAlignment.start,\n",
        "          children: [\n",
        "            SizedBox(height: 50),\n",
        "            Text(\"Sign In\", style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold)),\n",
        "            SizedBox(height: 20),\n",
        "            TextFormField(\n",
        "              controller: _usernameController,\n",
        "              decoration: InputDecoration(labelText: \"Username\"),\n",
        "            ),\n",
        "            SizedBox(height: 20),\n",
        "            TextFormField(\n",
        "              controller: _passwordController,\n",
        "              obscureText: true,\n",
        "              decoration: InputDecoration(labelText: \"Password\"),\n",
        "            ),\n",
        "            SizedBox(height: 30),\n",
        "            ElevatedButton(\n",
        "              onPressed: () {},\n",
        "              child: Text(\"Continue\"),\n",
        "              style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),  // Orange color\n",
        "            ),\n",
        "          ],\n",
        "        ),\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "_IXOfb3Ffcbq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## OTP Verification Screen ##"
      ],
      "metadata": {
        "id": "yG62yL5RfDD9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class OTPVerificationScreen extends StatelessWidget {\n",
        "  final TextEditingController _otpController = TextEditingController();\n",
        "\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      backgroundColor: Colors.white,\n",
        "      body: Padding(\n",
        "        padding: const EdgeInsets.all(16.0),\n",
        "        child: Column(\n",
        "          crossAxisAlignment: CrossAxisAlignment.start,\n",
        "          children: [\n",
        "            SizedBox(height: 50),\n",
        "            Text(\"OTP Verification\", style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold)),\n",
        "            SizedBox(height: 20),\n",
        "            Text(\"Enter the verification code sent to your phone number.\"),\n",
        "            SizedBox(height: 20),\n",
        "            TextField(\n",
        "              controller: _otpController,\n",
        "              keyboardType: TextInputType.number,\n",
        "              decoration: InputDecoration(\n",
        "                hintText: \"Enter OTP\",\n",
        "                border: OutlineInputBorder(),\n",
        "              ),\n",
        "            ),\n",
        "            SizedBox(height: 30),\n",
        "            ElevatedButton(\n",
        "              onPressed: () {},\n",
        "              child: Text(\"Verify\"),\n",
        "              style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),  // Orange color\n",
        "            ),\n",
        "            SizedBox(height: 10),\n",
        "            TextButton(\n",
        "              onPressed: () {},\n",
        "              child: Text(\"Didn't receive a code? Resend\"),\n",
        "            ),\n",
        "          ],\n",
        "        ),\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "dx-xKyTHgB-M"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Menu screen ##"
      ],
      "metadata": {
        "id": "S8hpT55lfDYr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class MenuScreen extends StatefulWidget {\n",
        "  @override\n",
        "  _MenuScreenState createState() => _MenuScreenState();\n",
        "}\n",
        "\n",
        "class _MenuScreenState extends State<MenuScreen> {\n",
        "  int _selectedIndex = 0;\n",
        "\n",
        "  void _onItemTapped(int index) {\n",
        "    setState(() {\n",
        "      _selectedIndex = index;\n",
        "    });\n",
        "  }\n",
        "\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      appBar: AppBar(\n",
        "        title: Text(\"Menu\"),\n",
        "        backgroundColor: Color(0xFF031F4C), // Dark blue color\n",
        "      ),\n",
        "      body: Padding(\n",
        "        padding: const EdgeInsets.all(16.0),\n",
        "        child: Column(\n",
        "          children: [\n",
        "            // Big, easy-to-tap buttons\n",
        "            ElevatedButton(\n",
        "              onPressed: () {\n",
        "                // Navigate to Drive Save screen\n",
        "              },\n",
        "              child: Text(\"Drive Save\", style: TextStyle(fontSize: 20)),\n",
        "              style: ElevatedButton.styleFrom(\n",
        "                primary: Color(0xFFFE9A2E),\n",
        "                padding: EdgeInsets.symmetric(horizontal: 50, vertical: 20),\n",
        "                textStyle: TextStyle(fontSize: 20),\n",
        "              ),\n",
        "            ),\n",
        "            SizedBox(height: 30),\n",
        "            ElevatedButton(\n",
        "              onPressed: () {\n",
        "                // Navigate to Hike Save screen\n",
        "              },\n",
        "              child: Text(\"Hike Save\", style: TextStyle(fontSize: 20)),\n",
        "              style: ElevatedButton.styleFrom(\n",
        "                primary: Color(0xFFFE9A2E),\n",
        "                padding: EdgeInsets.symmetric(horizontal: 50, vertical: 20),\n",
        "                textStyle: TextStyle(fontSize: 20),\n",
        "              ),\n",
        "            ),\n",
        "            SizedBox(height: 30),\n",
        "            ElevatedButton(\n",
        "              onPressed: () {\n",
        "                // Navigate to Report screen\n",
        "              },\n",
        "              child: Text(\"Report\", style: TextStyle(fontSize: 20)),\n",
        "              style: ElevatedButton.styleFrom(\n",
        "                primary: Color(0xFFFE9A2E),\n",
        "                padding: EdgeInsets.symmetric(horizontal: 50, vertical: 20),\n",
        "                textStyle: TextStyle(fontSize: 20),\n",
        "              ),\n",
        "            ),\n",
        "          ],\n",
        "        ),\n",
        "      ),\n",
        "      // Bottom Navigation Bar for easy access to menu options\n",
        "      bottomNavigationBar: BottomNavigationBar(\n",
        "        currentIndex: _selectedIndex,\n",
        "        onTap: _onItemTapped,\n",
        "        items: const <BottomNavigationBarItem>[\n",
        "          BottomNavigationBarItem(\n",
        "            icon: Icon(Icons.home),\n",
        "            label: 'Home',\n",
        "          ),\n",
        "          BottomNavigationBarItem(\n",
        "            icon: Icon(Icons.menu),\n",
        "            label: 'Menu',\n",
        "          ),\n",
        "          BottomNavigationBarItem(\n",
        "            icon: Icon(Icons.report),\n",
        "            label: 'Report',\n",
        "          ),\n",
        "        ],\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "LJfJC7DUnWtm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Map screen ##"
      ],
      "metadata": {
        "id": "zaOB69LgfDcq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import 'package:google_maps_flutter/google_maps_flutter.dart';\n",
        "\n",
        "class MapScreen extends StatefulWidget {\n",
        "  @override\n",
        "  _MapScreenState createState() => _MapScreenState();\n",
        "}\n",
        "\n",
        "class _MapScreenState extends State<MapScreen> {\n",
        "  GoogleMapController? _controller;\n",
        "\n",
        "  // Markers to be displayed on the map\n",
        "  Set<Marker> _markers = {\n",
        "    Marker(\n",
        "      markerId: MarkerId('accident'),\n",
        "      position: LatLng(24.713, 46.675),  // Example coordinates for accident\n",
        "      infoWindow: InfoWindow(title: 'Car Accident'),\n",
        "      icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueRed),\n",
        "    ),\n",
        "    Marker(\n",
        "      markerId: MarkerId('fire'),\n",
        "      position: LatLng(24.717, 46.678),  // Example coordinates for fire\n",
        "      infoWindow: InfoWindow(title: 'Fire'),\n",
        "      icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueOrange),\n",
        "    ),\n",
        "    Marker(\n",
        "      markerId: MarkerId('closed_road'),\n",
        "      position: LatLng(24.710, 46.670),  // Example coordinates for closed road\n",
        "      infoWindow: InfoWindow(title: 'Closed Road'),\n",
        "      icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueBlue),\n",
        "    ),\n",
        "  };\n",
        "\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      appBar: AppBar(\n",
        "        title: Text(\"Map\"),\n",
        "        backgroundColor: Color(0xFF031F4C),\n",
        "      ),\n",
        "      body: GoogleMap(\n",
        "        onMapCreated: (GoogleMapController controller) {\n",
        "          _controller = controller;\n",
        "        },\n",
        "        initialCameraPosition: CameraPosition(\n",
        "          target: LatLng(24.713, 46.675),  // Initial map center\n",
        "          zoom: 12,\n",
        "        ),\n",
        "        markers: _markers,\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "mlxAvesjgC-U"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Locate the Affected Area screen ##"
      ],
      "metadata": {
        "id": "-0INwckyfDgG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class LocateAreaScreen extends StatelessWidget {\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      appBar: AppBar(\n",
        "        title: Text(\"Locate the Affected Area\"),\n",
        "        backgroundColor: Color(0xFF031F4C),\n",
        "      ),\n",
        "      body: Column(\n",
        "        children: [\n",
        "          Expanded(\n",
        "            child: GoogleMap(\n",
        "              initialCameraPosition: CameraPosition(\n",
        "                target: LatLng(24.713, 46.675),  // Example coordinates\n",
        "                zoom: 12,\n",
        "              ),\n",
        "              markers: {\n",
        "                Marker(\n",
        "                  markerId: MarkerId('affected_area'),\n",
        "                  position: LatLng(24.713, 46.675),\n",
        "                  infoWindow: InfoWindow(title: 'Affected Area'),\n",
        "                ),\n",
        "              },\n",
        "            ),\n",
        "          ),\n",
        "          Padding(\n",
        "            padding: const EdgeInsets.all(16.0),\n",
        "            child: ElevatedButton(\n",
        "              onPressed: () {\n",
        "                // Handle report action\n",
        "              },\n",
        "              child: Text(\"Report\"),\n",
        "              style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),\n",
        "            ),\n",
        "          ),\n",
        "        ],\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "AcpnjVbfgQ2z"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Report screen ##"
      ],
      "metadata": {
        "id": "TDxj_KNafDjE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class ReportScreen extends StatelessWidget {\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      appBar: AppBar(\n",
        "        title: Text(\"Report\"),\n",
        "        backgroundColor: Color(0xFF031F4C),\n",
        "      ),\n",
        "      body: Padding(\n",
        "        padding: const EdgeInsets.all(16.0),\n",
        "        child: Column(\n",
        "          children: [\n",
        "            Expanded(\n",
        "              child: GridView.count(\n",
        "                crossAxisCount: 2,\n",
        "                crossAxisSpacing: 20,\n",
        "                mainAxisSpacing: 20,\n",
        "                children: [\n",
        "                  _buildReportButton(Icons.local_fire_department, \"Report a Fire\"),\n",
        "                  _buildReportButton(Icons.photo, \"Submit a Photo\"),\n",
        "                  _buildReportButton(Icons.cloud, \"Weather Conditions\"),\n",
        "                  _buildReportButton(Icons.warning, \"Hazards\"),\n",
        "                  _buildReportButton(Icons.block, \"Road Closure\"),\n",
        "                ],\n",
        "              ),\n",
        "            ),\n",
        "            ElevatedButton(\n",
        "              onPressed: () {\n",
        "                // Dial emergency number\n",
        "              },\n",
        "              child: Text(\"Call 911\"),\n",
        "              style: ElevatedButton.styleFrom(primary: Colors.red),\n",
        "            ),\n",
        "          ],\n",
        "        ),\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "\n",
        "  Widget _buildReportButton(IconData icon, String label) {\n",
        "    return ElevatedButton.icon(\n",
        "      onPressed: () {\n",
        "        // Handle report action\n",
        "      },\n",
        "      icon: Icon(icon),\n",
        "      label: Text(label),\n",
        "      style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "maCcNVj_gRUt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##  Submit a Photo screen ##"
      ],
      "metadata": {
        "id": "6niggk3hfDm7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class SubmitPhotoScreen extends StatefulWidget {\n",
        "  @override\n",
        "  _SubmitPhotoScreenState createState() => _SubmitPhotoScreenState();\n",
        "}\n",
        "\n",
        "class _SubmitPhotoScreenState extends State<SubmitPhotoScreen> {\n",
        "  List<String> images = [\n",
        "    'assets/image1.jpg', 'assets/image2.jpg', 'assets/image3.jpg', // Example image paths\n",
        "  ];\n",
        "\n",
        "  String? selectedImage;\n",
        "\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      appBar: AppBar(\n",
        "        title: Text(\"Submit a Photo\"),\n",
        "        backgroundColor: Color(0xFF031F4C),\n",
        "      ),\n",
        "      body: Padding(\n",
        "        padding: const EdgeInsets.all(16.0),\n",
        "        child: Column(\n",
        "          children: [\n",
        "            Expanded(\n",
        "              child: GridView.builder(\n",
        "                gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n",
        "                  crossAxisCount: 3,\n",
        "                  crossAxisSpacing: 10,\n",
        "                  mainAxisSpacing: 10,\n",
        "                ),\n",
        "                itemCount: images.length,\n",
        "                itemBuilder: (context, index) {\n",
        "                  return GestureDetector(\n",
        "                    onTap: () {\n",
        "                      setState(() {\n",
        "                        selectedImage = images[index];\n",
        "                      });\n",
        "                    },\n",
        "                    child: Image.asset(images[index], fit: BoxFit.cover),\n",
        "                  );\n",
        "                },\n",
        "              ),\n",
        "            ),\n",
        "            SizedBox(height: 20),\n",
        "            // Photo Submission Instructions\n",
        "            Text(\"Instructions: Ensure the photo clearly shows the hazard or closure.\"),\n",
        "            SizedBox(height: 10),\n",
        "            ElevatedButton.icon(\n",
        "              onPressed: selectedImage == null ? null : () {\n",
        "                // Handle photo submission\n",
        "              },\n",
        "              icon: Icon(Icons.camera_alt),\n",
        "              label: Text(\"Submit\"),\n",
        "              style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),\n",
        "            ),\n",
        "          ],\n",
        "        ),\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "}\n"
      ],
      "metadata": {
        "id": "eFp9eA2cgRtd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Thank You screen ##"
      ],
      "metadata": {
        "id": "6RqKvIe0fDpl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class ThankYouScreen extends StatelessWidget {\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      appBar: AppBar(\n",
        "        title: Text(\"Report Submitted\"),\n",
        "        backgroundColor: Color(0xFF031F4C),\n",
        "      ),\n",
        "      body: Center(\n",
        "        child: Column(\n",
        "          mainAxisAlignment: MainAxisAlignment.center,\n",
        "          children: [\n",
        "            Icon(Icons.check_circle, size: 100, color: Colors.green),\n",
        "            SizedBox(height: 20),\n",
        "            Text(\n",
        "              \"Thank You!\\nThe relevant authority has been notified regarding the report.\",\n",
        "              textAlign: TextAlign.center,\n",
        "              style: TextStyle(fontSize: 18),\n",
        "            ),\n",
        "            SizedBox(height: 30),\n",
        "            ElevatedButton(\n",
        "              onPressed: () {\n",
        "                // Navigate back or to another screen\n",
        "              },\n",
        "              child: Text(\"Continue\"),\n",
        "              style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),\n",
        "            ),\n",
        "          ],\n",
        "        ),\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "YYq4pUT5gihk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Weather Conditions screen ##"
      ],
      "metadata": {
        "id": "DGoNYAfyfDs2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class WeatherConditionsScreen extends StatelessWidget {\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      appBar: AppBar(\n",
        "        title: Text(\"Weather Conditions\"),\n",
        "        backgroundColor: Color(0xFF031F4C),\n",
        "      ),\n",
        "      body: Padding(\n",
        "        padding: const EdgeInsets.all(16.0),\n",
        "        child: Column(\n",
        "          mainAxisAlignment: MainAxisAlignment.center,\n",
        "          children: [\n",
        "            Row(\n",
        "              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n",
        "              children: [\n",
        "                _buildWeatherOption(Icons.cloud, \"Rain\"),\n",
        "                _buildWeatherOption(Icons.visibility, \"Fog\"),\n",
        "                _buildWeatherOption(Icons.air, \"Wind\"),\n",
        "              ],\n",
        "            ),\n",
        "            SizedBox(height: 40),\n",
        "            ElevatedButton.icon(\n",
        "              onPressed: () {\n",
        "                // Handle photo capture for weather\n",
        "              },\n",
        "              icon: Icon(Icons.camera_alt),\n",
        "              label: Text(\"Take a Photo\"),\n",
        "              style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),\n",
        "            ),\n",
        "            SizedBox(height: 20),\n",
        "            Text(\"Instructions: In case of fog, slow down and keep your headlights on.\"),\n",
        "          ],\n",
        "        ),\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "\n",
        "  Widget _buildWeatherOption(IconData icon, String label) {\n",
        "    return Column(\n",
        "      children: [\n",
        "        Icon(icon, size: 50, color: Color(0xFFFE9A2E)),\n",
        "        SizedBox(height: 10),\n",
        "        Text(label, style: TextStyle(fontSize: 18)),\n",
        "      ],\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "4YF6PAZ7gjDz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Hazards screen ##"
      ],
      "metadata": {
        "id": "XLxuc-khfDwC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class HazardsScreen extends StatelessWidget {\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      appBar: AppBar(\n",
        "        title: Text(\"Hazards\"),\n",
        "        backgroundColor: Color(0xFF031F4C),\n",
        "      ),\n",
        "      body: Padding(\n",
        "        padding: const EdgeInsets.all(16.0),\n",
        "        child: Column(\n",
        "          children: [\n",
        "            // Hazard options\n",
        "            Row(\n",
        "              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n",
        "              children: [\n",
        "                _buildHazardOption(Icons.warning, \"Big Hole\"),\n",
        "                _buildHazardOption(Icons.local_hospital, \"Car Accident\"),\n",
        "                _buildHazardOption(Icons.water_damage, \"Flooding\"),\n",
        "                _buildHazardOption(Icons.accessibility_new, \"Slippery Road\"),\n",
        "              ],\n",
        "            ),\n",
        "            SizedBox(height: 40),\n",
        "            // Photo Submission\n",
        "            ElevatedButton.icon(\n",
        "              onPressed: () {\n",
        "                // Handle photo capture\n",
        "              },\n",
        "              icon: Icon(Icons.camera_alt),\n",
        "              label: Text(\"Take a Photo\"),\n",
        "              style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),\n",
        "            ),\n",
        "            SizedBox(height: 20),\n",
        "            // Hazard Instructions\n",
        "            Text(\"Instructions: If you encounter a car accident, please avoid the area and call emergency services immediately.\"),\n",
        "            SizedBox(height: 10),\n",
        "            Text(\"Instructions: In case of flooding, turn around and avoid the flooded roads.\"),\n",
        "          ],\n",
        "        ),\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "\n",
        "  Widget _buildHazardOption(IconData icon, String label) {\n",
        "    return Column(\n",
        "      children: [\n",
        "        Icon(icon, size: 50, color: Color(0xFFFE9A2E)),\n",
        "        SizedBox(height: 10),\n",
        "        Text(label, style: TextStyle(fontSize: 18)),\n",
        "      ],\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "k8mrUxSugj7f"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Road Closure screen ##"
      ],
      "metadata": {
        "id": "JyIM7SRUfDx5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class RoadClosureScreen extends StatelessWidget {\n",
        "  @override\n",
        "  Widget build(BuildContext context) {\n",
        "    return Scaffold(\n",
        "      appBar: AppBar(\n",
        "        title: Text(\"Road Closure\"),\n",
        "        backgroundColor: Color(0xFF031F4C),\n",
        "      ),\n",
        "      body: Padding(\n",
        "        padding: const EdgeInsets.all(16.0),\n",
        "        child: Column(\n",
        "          children: [\n",
        "            // Road closure types\n",
        "            Row(\n",
        "              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n",
        "              children: [\n",
        "                _buildClosureOption(Icons.block, \"Left Lane Closed\"),\n",
        "                _buildClosureOption(Icons.block, \"Right Lane Closed\"),\n",
        "                _buildClosureOption(Icons.block, \"Road Closed\"),\n",
        "                _buildClosureOption(Icons.construction, \"Partial Lane Closed\"),\n",
        "                _buildClosureOption(Icons.directions_car, \"Detour\"),\n",
        "              ],\n",
        "            ),\n",
        "            SizedBox(height: 40),\n",
        "            // Photo Submission\n",
        "            ElevatedButton.icon(\n",
        "              onPressed: () {\n",
        "                // Handle photo capture\n",
        "              },\n",
        "              icon: Icon(Icons.camera_alt),\n",
        "              label: Text(\"Take a Photo\"),\n",
        "              style: ElevatedButton.styleFrom(primary: Color(0xFFFE9A2E)),\n",
        "            ),\n",
        "            SizedBox(height: 20),\n",
        "            // Road Closure Instructions\n",
        "            Text(\"Instructions: Slow down, follow detours, and be cautious while navigating through construction zones.\"),\n",
        "            SizedBox(height: 10),\n",
        "            Text(\"Instructions: If the road is closed, follow detour signs and avoid blocked lanes.\"),\n",
        "          ],\n",
        "        ),\n",
        "      ),\n",
        "    );\n",
        "  }\n",
        "\n",
        "  Widget _buildClosureOption(IconData icon, String label) {\n",
        "    return Column(\n",
        "      children: [\n",
        "        Icon(icon, size: 50, color: Color(0xFFFE9A2E)),\n",
        "        SizedBox(height: 10),\n",
        "        Text(label, style: TextStyle(fontSize: 18)),\n",
        "      ],\n",
        "    );\n",
        "  }\n",
        "}"
      ],
      "metadata": {
        "id": "4NEONJgui3Rz"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}